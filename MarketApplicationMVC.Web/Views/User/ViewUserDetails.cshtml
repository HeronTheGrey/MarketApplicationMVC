@model MarketApplicationMVC.Application.ViewModel.User.UserDetailsVm

@{
    ViewData["Title"] = "ViewUserDetails";
}

<h1>ViewUserDetails</h1>

<div>
    <h4>UserDetailsVm</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Type)
        </dd>
    </dl>
    <br />
    @Html.ActionLink("Edit address", "EditAddress", new { id = Model.Id })
    <h5>Adres</h5>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.Country)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.Country)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.Street)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.Street)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.BuildingNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.BuildingNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.FlatNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.FlatNumber)
        </dd>

    </dl>
    <div class="row">
        @if (!(Model.Emails is null) && !(Model.PhoneNumbers is null))
        {
            <h4>Dane kontaktowe</h4>
            if (!(Model.Emails is null))
            {
                <h5>Email</h5>
                <ol class="list-group">
                    <li>
                        @foreach (var email in Model.Emails)
                        {
                            <il>
                                @Html.DisplayFor(modelItem => email.ContactInformationDetail)
                            </il>
                        }
                    </li>
                </ol>
            }
            if (!(Model.PhoneNumbers is null))
            {
                <h5>Phone numbers</h5>
                <ol class="list-group">
                    <li>
                        @foreach (var number in Model.PhoneNumbers)
                        {
                            <il>
                                @Html.DisplayFor(modelItem => number.ContactInformationDetail)
                            </il>
                        }
                    </li>
                </ol>
            }
        }
    </div>
    <br />

    <h5>Statystyki użytkownika</h5>
    <dl class="row">

        <br />
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CountOfThreads)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CountOfThreads)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CountOfPosts)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CountOfPosts)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CountOfOffers)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CountOfOffers)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "EditUser", new { id = Model.Id }) |
    <a asp-action="Index">Back to List</a>
</div>
